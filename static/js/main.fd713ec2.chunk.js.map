{"version":3,"sources":["redux/store.js","routes.js","components/Navigation/Navigation.jsx","components/UserMenu/UserMenu.jsx","components/AuthNav/AuthNav.jsx","components/AppBar/AppBar.jsx","components/PrivateRoute/PrivateRoute.jsx","components/PublicRoute/PublicRoute.jsx","components/Spinner/Spinner.jsx","App.js","index.js","redux/contacts/contacts-action.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-selectors.js","components/Spinner/styles.module.scss","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js"],"names":["middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","devTools","process","persistor","persistStore","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","state","isAuthenticated","authSelectors","getIsAuthenticated","to","routes","exact","style","activeStyle","container","alignItems","avatar","marginRight","name","mapDispatchToProps","onLogout","authOperations","logOut","getUserName","type","onClick","AuthNav","header","justifyContent","borderBottom","Component","component","redirectTo","routeProps","render","props","restricted","Spinner","className","height","width","HomePage","lazy","Contacts","Register","Login","App","this","onGetCurrentUser","fallback","path","getCurrentUser","isLoadingContacts","selectors","getIsLoading","ReactDOM","StrictMode","loading","document","getElementById","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","fetchContacts","dispatch","actions","get","then","data","catch","error","message","addContact","number","post","deleteContact","id","delete","createReducer","_","action","payload","filter","combineReducers","getContacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","module","exports","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","authActions","token","headers","common","Authorization","register","credentials","a","response","logIn","getState","persistedToken"],"mappings":"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","file":"static/js/main.fd713ec2.chunk.js","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { reducer } from './contacts';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: reducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","export default {\n  home: '/',\n  register: '/register',\n  login: '/login',\n  contacts: '/contacts',\n};\n","import React from 'react' \nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport {authSelectors} from '../../redux/auth'\nimport routes from '../../routes'\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst Navigation = ({isAuthenticated}) => (\n  <nav>\n    <NavLink to={routes.home} exact style={styles.link} activeStyle={styles.activeLink}>\n    Main\n    </NavLink>\n\n    {isAuthenticated && (    \n    <NavLink\n      to={routes.contacts}\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Your Contacts\n    </NavLink>\n    )}\n\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state)\n})\n\nexport default connect(mapStateToProps)(Navigation);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\n// import defaultAvatar from './default-avatar.png';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div style={styles.container}>\n    {/* <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} /> */}\n    <span style={styles.name}>Welcome, {name} </span>\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\nconst mapStateToProps = state => ({\n  name: authSelectors.getUserName(state),\n  // avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport routes from '../../routes'\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to={routes.register}\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n        Register\n    </NavLink>\n    <NavLink\n      to={routes.login}\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Login\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav';\nimport { authSelectors } from '../../redux/auth';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nconst AppBar = ({isAuthenticated}) => (\n  <header style={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);","import { Route, Redirect} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {authSelectors} from '../../redux/auth';\n// import routes from '../../routes'\n\nconst PrivateRoute = ({\n    component: Component,\n    isAuthenticated,\n    redirectTo,\n    ...routeProps\n}) => (\n    <Route \n    {...routeProps} render={props => isAuthenticated ? <Component {...props}/> : <Redirect to={redirectTo}/>}\n    />\n)\n\nconst mapStateToProps = state => ({\n    isAuthenticated: authSelectors.getIsAuthenticated(state)\n})\n\nexport default connect(mapStateToProps)(PrivateRoute);","import { Route, Redirect} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {authSelectors} from '../../redux/auth';\n// import routes from '../../routes'\n\nconst PublicRoute = ({\n    component: Component,\n    isAuthenticated,\n    redirectTo,\n    ...routeProps\n}) => (\n    <Route \n    {...routeProps} render={props => isAuthenticated && routeProps.restricted ? \n    (<Redirect to ={redirectTo}/>) :\n    (<Component {...props}/>)}\n    />\n)\n\nconst mapStateToProps = state => ({\n    isAuthenticated: authSelectors.getIsAuthenticated(state)\n})\n\nexport default connect(mapStateToProps)(PublicRoute);","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport styles from './styles.module.scss'\n\nfunction Spinner() {\n  return(<Loader className={styles.Spinner} type=\"Rings\" color=\"#00BFFF\" height={80} width={80} />\n)}  \n\nexport default Spinner;","import React, { Component, Suspense, lazy } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport AppBar from './components/AppBar';\nimport { ToastContainer } from 'react-toastify';\nimport { selectors } from './redux/contacts';\nimport { authOperations } from './redux/auth';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport routes from './routes';\nimport Spinner from './components/Spinner';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'modern-normalize/modern-normalize.css';\n\nconst HomePage = lazy(() =>\n  import('./views/HomePage' /* webpackChunkName: \"home-page\" */),\n);\nconst Contacts = lazy(() =>\n  import('./views/Contacts' /* webpackChunkName: \"contacts\" */),\n);\nconst Register = lazy(() =>\n  import('./views/Register' /* webpackChunkName: \"register\" */),\n);\nconst Login = lazy(() =>\n  import('./views/Login' /* webpackChunkName: \"login\" */),\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Suspense fallback={<Spinner />}>\n          <Switch>\n            <Route exact path={routes.home} component={HomePage} />\n            <PublicRoute\n              path={routes.register}\n              restricted\n              redirectTo={routes.contacts}\n              component={Register}\n            />\n            <PublicRoute\n              path={routes.login}\n              restricted\n              redirectTo={routes.contacts}\n              component={Login}\n            />\n            <PrivateRoute\n              path={routes.contacts}\n              redirectTo={routes.login}\n              component={Contacts}\n            />\n          </Switch>\n        </Suspense>\n\n        {/* {this.props.isLoadingContacts ? <Spinner /> : <ContactList />}  */}\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: selectors.getIsLoading(state),\n});\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst changeFilter = createAction('contacts/ChangeFilter');\n\nexport default {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n};\n","import axios from 'axios';\nimport actions from './contacts-action';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(actions.fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\n    .catch(error => dispatch(actions.fetchContactsError(error.message)));\n};\n\nconst addContact = ({ name, number }) => dispatch => {\n  const contacts = { name, number };\n\n  dispatch(actions.addContactRequest());\n\n  axios\n    .post('/contacts', contacts)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch(error => dispatch(actions.addContactError(error.message)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\n    .catch(error => dispatch(actions.deleteContactError(error.message)));\n};\n\nexport default { fetchContacts, addContact, deleteContact };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-action';\n\nconst {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} = actions;\n\nconst contacts = createReducer([], {\n  [fetchContactsSuccess]: (_, action) => action.payload,\n  [addContactSuccess]: (state, action) => [...state, action.payload],\n  [deleteContactSuccess]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.contacts;\nconst getFilter = state => state.contacts.filter;\nconst getIsLoading = state => state.contacts.loading;\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport default { getContacts, getFilter, getVisibleContacts, getIsLoading };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"styles_Spinner__-QfTi\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSucces');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSucces');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSucces');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSucces');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logIn, logOut, getCurrentUser };\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\nconst getUserName = state => state.auth.user.name;\n\nexport default { getIsAuthenticated, getUserName };\n"],"sourceRoot":""}