{"version":3,"sources":["components/Form/styles.module.scss","components/Filter/styles.module.scss","components/ContactList/styles.module.scss","components/Spinner/styles.module.scss","redux/contacts/contacts-action.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-selectors.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/store.js","views/HomePage/HomePage.jsx","components/ContactList/ContactList.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","views/Contacts/Contacts.jsx","routes.js","components/Navigation/Navigation.jsx","components/UserMenu/UserMenu.jsx","components/AuthNav/AuthNav.jsx","components/AppBar/AppBar.jsx","views/Register/Register.jsx","views/Login/Login.jsx","components/Spinner/Spinner.jsx","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","actions","get","then","data","catch","error","name","number","contacts","post","id","delete","createReducer","_","action","payload","state","filter","loading","combineReducers","getContacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","getIsLoading","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","user","email","authActions","token","register","credentials","a","response","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","auth","authReducer","devTools","process","HomePage","connect","selectors","onDeleteContact","operations","className","styles","list","map","item","button","onClick","Form","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","find","toast","warning","reset","onSubmit","title","this","form","label","text","input","type","onChange","pattern","required","content","Component","e","target","Contacts","fetchContacts","dispacth","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","to","routes","exact","style","activeStyle","container","alignItems","avatar","marginRight","UserMenu","onLogout","AuthNav","header","justifyContent","borderBottom","AppBar","isAuthenticated","width","flexDirection","marginBottom","Register","password","handleChange","onRegister","autoComplete","mapDispatchToProps","authOperations","Login","Spinner","App","path","component","isLoadingContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68f74edb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__1YmCD\",\"form\":\"styles_form__3BTQv\",\"label\":\"styles_label__1Ku7G\",\"input\":\"styles_input__2RtgK\",\"text\":\"styles_text__2Muy-\",\"button\":\"styles_button__3_r4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__2ThQ_\",\"label\":\"styles_label__1EQMF\",\"text\":\"styles_text__H1lwr\",\"input\":\"styles_input__3cObw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__xjOlh\",\"item\":\"styles_item__wRJt2\",\"button\":\"styles_button__AJHCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"styles_Spinner__-QfTi\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst changeFilter = createAction('contacts/ChangeFilter');\n\nexport default {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n};\n","import axios from 'axios';\nimport actions from './contacts-action';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(actions.fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\n    .catch(error => dispatch(actions.fetchContactsError(error)));\n};\n\nconst addContact = ({ name, number }) => dispatch => {\n  const contacts = { name, number };\n\n  dispatch(actions.addContactRequest());\n\n  axios\n    .post('/contacts', contacts)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch(error => dispatch(actions.addContactError(error)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\n    .catch(error => dispatch(actions.deleteContactError(error)));\n};\n\nexport default { fetchContacts, addContact, deleteContact };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-action';\n\nconst {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} = actions;\n\nconst contacts = createReducer([], {\n  [fetchContactsSuccess]: (_, action) => action.payload,\n  [addContactSuccess]: (state, action) => [...state, action.payload],\n  [deleteContactSuccess]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  deleteContactError,\n  [addContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.contacts;\nconst getFilter = state => state.contacts.filter;\nconst getIsLoading = state => state.contacts.loading;\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport default { getContacts, getFilter, getVisibleContacts, getIsLoading };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSucces');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSucces');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSucces');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSucces');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n});\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n  try {\n    const response = await axios.post('/users/signup', credentials);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error));\n  }\n};\n\nexport default { register };\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { reducer } from './contacts';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    auth: authReducer,\n    contacts: reducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","\nconst HomePage = () => {\n    return(\n        <h1>Hello</h1>\n    )\n}\nexport default HomePage;","import { connect } from 'react-redux'\nimport { operations, selectors } from '../../redux/contacts';\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.scss'\n\n\nconst ContactList = ({contacts, onDeleteContact }) =>{return (<>\n    <ul className={styles.list} >{contacts.map(({id, name, number}) => <li key={id} className={styles.item}>\n        <p>{name}:</p>\n        <p>{number}</p>\n        <button className={styles.button} onClick={()=> onDeleteContact(id)}>Delete</button>\n        </li>)}\n        </ul> </>);\n    } \n\n    ContactList.propTypes = {\n     onDeleteContact: PropTypes.func.isRequired\n    }\n\n      const mapStateToProps = state => ({\n        contacts: selectors.getVisibleContacts(state)\n    })\n    const mapDispatchToProps = dispatch => ({\n        onDeleteContact: (id) => dispatch(operations.deleteContact(id)),\n    })\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { operations } from '../../redux/contacts';\nimport { toast } from 'react-toastify';\nimport styles from '../Form/styles.module.scss';\n\n\nclass Form extends Component{\n\n    state = {\n        name: '',\n        number: '',\n    }\n\n    handleInputChange = (event) => {\n        const { name, value } = event.currentTarget;\n        this.setState({\n          [name]: value,\n        });\n      };\n   \n\n      handleSubmit = (event) => {\n        event.preventDefault();\n\n        const { name } = this.state;\n        const { contacts } = this.props;\n        const findContact = contacts.find(\n          (item) => item.name.toLowerCase() === name.toLowerCase()\n        );\n        if (findContact) {\n          toast.warning(`${name} is already in contacts`);\n          this.reset();\n          return;\n        }\n\n        this.props.onSubmit(this.state );\n        this.reset();\n      };\n\n      reset = () => {\n          this.setState({name : '', number : ''})\n      }\n\n   \n\n    render(){\n        return(<>\n        \n            <h1 className={styles.title}>Phone book</h1>\n            <form onSubmit={this.handleSubmit} className={styles.form}>\n              <label className={styles.label}>\n                <span className={styles.text}>Name</span>\n                <input className={styles.input}\n                  type='text'\n                  name='name'\n                  value={this.state.name}\n                  onChange={this.handleInputChange}\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  required\n                />\n              </label>\n              <label className={styles.label}>\n                <span className={styles.text}>Phone</span>\n                <input className={styles.input}\n                  type='tel'\n                  name='number'\n                  value={this.state.number}\n                  onChange={this.handleInputChange}\n                  // pattern='(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})'\n                  title='Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +'\n                  required\n                />\n              </label>\n              <button className={styles.button} type='submit'><span className={styles.content}>Add contact</span> </button>\n            </form>\n            \n          </>)\n    }\n}\n\nconst mapStateToProps = ({ contacts: { contacts } }) => ({\n  contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name,number) => dispatch(operations.addContact(name,number)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { action, selectors } from '../../redux/contacts'\nimport styles from './styles.module.scss'\n\nconst Filter = ({value, onChange}) => {\n    return(<>\n    <h2 className={styles.title}>Contacts</h2>  \n     <label className={styles.label}>\n       <span className={styles.text}>Find contacts by name</span> \n        \n          <input className={styles.input} type='text' value={value} onChange={onChange} />\n        \n      </label> </>)}\n\n      Filter.propTypes = {\n        value: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n      }\n\n      const mapStateToProps = (state) => ({\n         value: selectors.getFilter(state)\n    })\n     const mapDispatchToProps =  dispatch => ({\n       onChange: e => dispatch(action.changeFilter(e.target.value))\n     })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport ContactList from '../../components/ContactList'\nimport Form from '../../components/Form';\nimport Filter from '../../components/Filter'\nimport { operations, } from '../../redux/contacts';\n\nclass Contacts extends Component {\n    componentDidMount() {\n        this.props.fetchContacts();\n      }\n      render() {\n        return ( \n            <>    \n            <Form />\n            <Filter />    \n             <ContactList />\n             </>\n        );\n      }\n    }\n  \n    const mapDispatchToProps = dispacth => ({\n      fetchContacts: () => dispacth(operations.fetchContacts()),\n    });\n    export default connect(null, mapDispatchToProps)(Contacts);","export default {\n  home: '/',\n  register: '/register',\n  login: '/login',\n  contacts: '/contacts',\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport routes from '../../routes'\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst Navigation = () => (\n  <nav>\n    <NavLink to={routes.home} exact style={styles.link} activeStyle={styles.activeLink}>\n    Main\n    </NavLink>\n\n    <NavLink\n      to={routes.contacts}\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Your Contacts\n    </NavLink>\n  </nav>\n);\n\nexport default Navigation;","import React from 'react';\nimport { connect } from 'react-redux';\n// import { authSelectors, authOperations } from '../../redux/auth';\n// import defaultAvatar from './default-avatar.png';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div style={styles.container}>\n    {/* <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} /> */}\n    <span style={styles.name}>Welcome, </span>\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\n// const mapStateToProps = state => ({\n//   name: authSelectors.getUsername(state),\n//   avatar: defaultAvatar,\n// });\n\n// const mapDispatchToProps = {\n//   onLogout: authOperations.logOut,\n// };\n\nexport default UserMenu;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport routes from '../../routes'\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to={routes.register}\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n        Register\n    </NavLink>\n    <NavLink\n      to={routes.login}\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Login\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav';\n// import { authSelectors } from '../redux/auth';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nconst AppBar = ({isAuthenticated}) => (\n  <header style={styles.header}>\n    <Navigation />\n    {/* <UserMenu />\n    <AuthNav /> */}\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\n// const mapStateToProps = state => ({\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\n// });\n\nexport default AppBar;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport  { authOperations }  from '../../redux/auth';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nclass Register extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n\n    return (\n      <div>\n        <h1>Register</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          style={styles.form}\n          autoComplete=\"off\"\n        >\n          <label style={styles.label}>\n            Имя\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Почта\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Пароль\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button type=\"submit\">Зарегистрироваться</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(Register);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import { authOperations } from '../redux/auth';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    // this.props.onLogin(this.state);\n\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <div>\n        <h1>Страница логина</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          style={styles.form}\n          autoComplete=\"off\"\n        >\n          <label style={styles.label}>\n            Почта\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Пароль\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button type=\"submit\">Войти</button>\n        </form>\n      </div>\n    );\n  }\n}\n\n// const mapDispatchToProps = {\n//   onLogin: authOperations.logIn,\n// };\n\nexport default Login;","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport styles from './styles.module.scss'\n\nfunction Spinner() {\n  return(<Loader className={styles.Spinner} type=\"Rings\" color=\"#00BFFF\" height={80} width={80} />\n)}  \n\nexport default Spinner;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from './views/HomePage';\nimport Contacts from './views/Contacts';\nimport AppBar from './components/AppBar';\nimport Register from './views/Register';\nimport Login from './views/Login';\nimport { ToastContainer } from 'react-toastify';\nimport { operations, selectors } from './redux/contacts';\nimport routes from './routes';\nimport Spinner from './components/Spinner';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'modern-normalize/modern-normalize.css';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Switch>\n          <Route exact path={routes.home} component={HomePage} />\n          <Route path={routes.register} component={Register} />\n          <Route path={routes.login} component={Login} />\n          <Route path={routes.contacts} component={Contacts} />\n        </Switch>\n\n        {/* {this.props.isLoadingContacts ? <Spinner /> : <ContactList />}  */}\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: selectors.getIsLoading(state),\n});\n\nconst mapDispatchToProps = dispacth => ({\n  fetchContacts: () => dispacth(operations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}